name: ci-build-push-ghcr-and-dockerhub

on:
  push:
    tags:
      - 'v*.*.*'

env:
  # 镜像基础名，ghcr.io 和 docker.io 共用
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # 关键：允许写 ghcr.io

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1. 解析标签 / 生成元数据
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            ${{ secrets.DOCKERHUB_TOKEN != '' && env.IMAGE_NAME || '' }}  # 若未配置 DOCKERHUB_TOKEN 则跳过 docker.io
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest

      # 2. 登录 ghcr.io（GITHUB_TOKEN 自带即可）
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. 登录 Docker Hub（可选）
      - name: Login to Docker Hub
        if: ${{ secrets.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. 多架构支持
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # 5. 构建并推送
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
